# This scenario is templated with Jinja2 and rendered for each group (see sample sheet).
# A variable `samples` is available, holding the dataframe of
# the sample sheet, filtered to those samples contained in the group to be rendered.
# For example, this can be used to pass arbitrary column values (like the purity below),
# to the sample definitions.
# Note that sample names here must correspond to the alias column in the sample sheet.

__definitions__:
  - purity = params.samples["purity"][1]
  - sex = params.samples["sex"][0]

species:
  heterozygosity: 0.001
  germline-mutation-rate: 1e-3
  ploidy:
    male:
      all: 2
      X: 1
      Y: 1
    female:
      all: 2
      X: 2
      Y: 0
  genome-size: 3.5e9

samples:
  tumor:
    sex: ?f"{sex}"
    somatic-effective-mutation-rate: 1e-6
    inheritance:
      clonal:
        from: normal
        somatic: false
    contamination:
      by: normal
      fraction: ?f"{1.0 - purity}"
  normal:
    sex: ?f"{sex}"
    somatic-effective-mutation-rate: 1e-6

events:
  somatic_tumor_high: "normal:0.0 & tumor:[0.1,1.0]"
  somatic_tumor_low: "normal:0.0 & tumor:]0.0,0.1["
  somatic_normal: "normal:[0.05,0.5[ & tumor:[0.0,1.0]"
  somatic_normal_or_ctc: "normal:]0.0,0.05[ & tumor:[0.0,1.0]"
  loh: "normal:0.5 & tumor:1.0"
  loh_or_amplification: "normal:0.5 & tumor:[0.9,1.0["
  germline: "(normal:0.5 & tumor:[0.0,0.9[) | (normal:1.0 & tumor:[0.0,1.0])"